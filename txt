from botbuilder.core import ActivityHandler, TurnContext
from botbuilder.schema import ChannelAccount

class PulseSurveyBot(ActivityHandler):
    async def on_message_activity(self, turn_context: TurnContext):
        await turn_context.send_activity(f"You said: {turn_context.activity.text}")

    async def on_members_added_activity(self, members_added: [ChannelAccount], turn_context: TurnContext):
        for member in members_added:
            if member.id != turn_context.activity.recipient.id:
                await turn_context.send_activity("Welcome to PulseSurveyBot!")

# This is my PulseSurveyBot
from aiohttp import web
from botbuilder.core import BotFrameworkAdapter, BotFrameworkAdapterSettings
from botbuilder.schema import Activity
import json

from PulseSurveyBot import PulseSurveyBot

# Define app settings
bot_settings = BotFrameworkAdapterSettings("", "")  # App ID and Password

# Create bot adapter
adapter = BotFrameworkAdapter(bot_settings)
bot = PulseSurveyBot()

async def messages(req):
    body = await req.json()
    activity = Activity().deserialize(body)
    auth_header = req.headers.get("Authorization", "")
    response = await adapter.process_activity(activity, auth_header, bot.on_turn)
    if response:
        return web.Response(text=json.dumps(response))
    return web.Response()

app = web.Application()
app.router.add_post("/api/messages", messages)

if __name__ == "__main__":
    web.run_app(app, host="localhost", port=3978)